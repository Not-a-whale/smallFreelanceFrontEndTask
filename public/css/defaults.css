/* ------------------------------ GENERAL ---------------------------------- */
html,
body {
  /* need this one first so the height of everything else will be 100% if needed */
  height: 100%;
  width: 100%;
  margin: 0px;
  padding: 0px;
}

* {
  margin: 0px;
  padding: 0px;
  border: 0px;

  font-family: var(--font-family-primary);
  font-size: var(--font-norm);
  font-weight: normal;
  color: var(--color-font-1);
}

.as-col {
  /* force container to display content in columns */
  display: flex !important;
  flex-direction: column !important;
}

.as-row {
  /* force container to display content in rows */
  display: flex !important;
  flex-direction: row !important;
}

/* ------------------------------ INPUTS ----------------------------------- */

/*  this is to order the label and input
    because CSS cant let you grab elements to the left of other elements
    =( */
div.datalist,
div.select,
div.input {
  display: flex;
  flex-direction: column;
}

/* sortification */
div.datalist>label,
div.select>label,
div.input>label {
  order: 1;
}

div.datalist>input,
div.select>select,
div.input>input {
  order: 2;
}

div.datalist>div.error-ms,
div.select>div.error-ms,
div.input>div.error-ms {
  order: 3;
}

/* for required asterisk */
div.datalist>input:required+label:after,
div.select>select:required+label:after,
div.input>input:required+label:after {
  content: ' *';
}

/* default input behavior */
div.datalist input,
div.select select,
div.input input {
  min-width: 10px;
  flex-basis: auto;
  min-height: var(--input-height-min);
  height: var(--input-height);
  width: 100%;
  padding-left: 5px;
  border-radius: 2px;
  border: 1px solid var(--color-tone-bright);
  box-sizing: border-box;
}

.head>.search>* input {
  min-height: var(--table-search-input-height-min);
  height: var(--table-search-input-height);
}


div.select select {
  background: url(/imgs/select_arrow/default.svg);
  -webkit-appearance: none;
  background-color: var(--color-highlight-bright);
  background-position: right 8px top 5px;
  background-repeat: no-repeat;
}

div.select select:disabled,
div.select select:disabled:hover {
  background: url(/imgs/select_arrow/disabled.svg);
  -webkit-appearance: none;
  background-position: right 8px top 5px;
  background-repeat: no-repeat;
  border: 1px solid var(--color-disabled);
  background-color: var(--color-input-background);
  outline-color: var(--color-disabled);
  outline-width: 1px;
  color: var(--color-tone-light);
}

div.select select:focus,
div.select select:focus:hover {
  background: url(/imgs/select_arrow/focus.svg);
  -webkit-appearance: none;
  background-color: var(--color-highlight-bright);
  background-position: right 8px top 5px;
  background-repeat: no-repeat;
}


div.select select:invalid,
div.select select:invalid:hover {
  background: url(/imgs/select_arrow/invalid.svg);
  -webkit-appearance: none;
  background-color: var(--color-highlight-bright);
  background-position: right 8px top 5px;
  background-repeat: no-repeat;
}


div.select select:hover {
  background: url(/imgs/select_arrow/hover.svg);
  -webkit-appearance: none;
  background-color: var(--color-highlight-bright);
  background-position: right 8px top 5px;
  background-repeat: no-repeat;
}

div.datalist input:hover,
div.select select:hover,
div.input input:hover {
  border: 1px solid var(--color-highlight-hover);
}

div.datalist input:focus,
div.select select:focus,
div.input input:focus {
  outline-color: var(--color-primary);
}

div.datalist input:disabled,
div.input input:disabled {
  border: 1px solid var(--color-disabled);
  background-color: var(--color-input-background);
  outline-color: var(--color-disabled);
  outline-width: 1px;
  color: var(--color-tone-light);
}

div.datalist input.invalid:not(:disabled),
div.select select:invalid,
div.input input:invalid {
  outline-color: var(--color-danger);
  outline-width: 1px;
  border: 1px solid var(--color-danger);
  color: var(--color-danger);
}

label {
  font-size: var(--font-small);
  font-weight: bold;
  text-transform: capitalize;
  line-height: var(--font-line-large);
}

div.datalist input:disabled+label,
div.select select:disabled+label,
div.input input:disabled+label {
  color: var(--color-disabled);
}

div.datalist input.invalid:not(:disabled)+label,
div.select select:invalid+label,
div.input input:invalid+label {
  color: var(--color-danger);
}

div.datalist input.invalid:not(:disabled)+label+div.error-ms,
div.select select:invalid+label+div.error-ms,
div.input input:invalid+label+div.error-ms {
  color: var(--color-danger);
  font-size: var(--font-small);
}

div.checkbox input:disabled+label+div.error-ms,
div.checkbox input:valid+label+div.error-ms,
div.datalist input:disabled+label+div.error-ms,
div.datalist input.ng-valid+label+div.error-ms,
div.select select:valid+label+div.error-ms,
div.select select:disabled+label+div.error-ms,
div.input input:valid+label+div.error-ms,
/* Can have input without label, still need to hide error message */
div.checkbox input:disabled+div.error-ms,
div.checkbox input:valid+div.error-ms,
div.datalist>input:disabled+div.error-ms,
div.datalist>input.ng-valid+div.error-ms,
div.select>select:valid+div.error-ms,
div.select>select:disabled+div.error-ms,
div.input>input:valid+div.error-ms {
  display: none;
}

div.checkbox {
  position: relative;
}

div.checkbox input+label {
  position: relative;
  cursor: pointer;
}

/* draw the box */
div.checkbox input:before {

  content: '';
  position: relative;

  top: -6px;
  width: 22px;
  height: 22px;

  margin-right: 7px;
  display: inline-block;
  vertical-align: middle;

  background-color: var(--color-highlight-bright);
  box-sizing: border-box;

  border-style: solid;
  border-width: 1px;
  border-color: var(--color-tone-middle);
  border-radius: 2px;
}

div.checkbox input:focus:before {
  border-color: var(--color-highlight-hover);
}

div.checkbox:hover input:before {
  border-width: 2px;
  border-color: var(--color-tone-light);
}

div.checkbox input:checked:before {
  background-color: var(--color-accent-default);
  border-color: var(--color-accent-default);
  border-radius: 4px;
}

div.checkbox.some:not(:hover) input:not(:checked):before {
  background-color: var(--color-accent-hover);
  border: none;
}

/* draw the checkmark */
div.checkbox input:after{
  content: '';
  position: absolute;
  left: 7px;
  top: 3px;
  width: 5px;
  height: 9px;
  border-width: 0px 3px 3px 0px;
  border-style: solid;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  display: none;
}

div.checkbox input:checked:after {
  border-color: var(--color-highlight-bright);
  display: block;
}

div.checkbox.some:hover input:not(:checked):after,
div.checkbox:hover input:not(:checked):after {
  border-color: var(--color-tone-light);
  display: block;
}

div.checkbox.some:not(:hover) input:not(:checked):after {
  border-color: var(--color-highlight-bright);
  display: block;
  width: 12px;
  left: 5px;
  top: 2px;
  border-width: 0px 0px 3px 0px;
  -webkit-transform: rotate(0);
  -ms-transform: rotate(0);
  transform: rotate(0);

}