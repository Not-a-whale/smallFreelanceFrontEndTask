/* ------------------------------ GENERAL ---------------------------------- */
html,
body {
  /* need this one first so the height of everything else will be 100% if needed */
  height: 100%;
  width: 100%;
  margin: 0px;
  padding: 0px;
}

/* div {
    margin:             2px;
    padding:            1px;
    border:             1px solid threedface;

    text-align:         center;
    vertical-align:     middle;

    width:              calc(100% - 4px);
    height:             calc(100% - 4px);

    box-sizing:         border-box;
    display:            inline-block;

    display:            flex;
    justify-content:    space-between;

}*/


* {
  margin: 0px;
  padding: 0px;
  border: 0px;

  font-family: var(--font-family-primary);
  font-size: var(--font-norm);
  font-weight: normal;
  color: var(--color-tone-heavy);
}


.as-col {
  /* force container to display content in columns */
  display: flex !important;
  flex-direction: column !important;
}

.as-row {
  /* force container to display content in rows */
  display: flex !important;
  flex-direction: row !important;
}

.clickable {
  cursor: pointer;
}

.collapsed {
  display: none;
}





/* -------------------------------- TABS ----------------------------------- */

.tab {}

.tab2 {
  background-color: transparent;
  min-height: 30px;
  min-width: 116px;
  height: 30px;
  border-radius: 4px;
  text-align: center;
  display: inline-block;
  vertical-align: middle;
  padding: auto;
}

.tab2:hover {
  background-color: var(--color-tone-bright);
}

.tab2[active] {
  background-color: var(--color-accent-default);
}

/* -------------------------------- BUTTONS -------------------------------- */
/* These buttons are for <a></a> tags for now */
/* will need to add support for actual <input> and <button> */

.btn {
  font-size: var(--font-norm);
  text-decoration: none;
  font-weight: bold;

  border-radius: 4px;

  display: inline-block;
  vertical-align: middle;
  text-align: center;

  min-height: var(--btn-height-min);
  min-width: var(--btn-width-min);
  line-height: var(--btn-line-height);
  padding-left: var(--btn-padding);
  padding-right: var(--btn-padding);

  box-shadow: 0px 2px 3px var(--color-shadow-soft);
  box-sizing: border-box;

  margin-bottom: 5px;
}

a.btn {
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  -webkit-user-drag: none;
}

button.btn:hover,
input.btn:hover {
  cursor: pointer
}

input.btn:focus,
button.btn:focus {
  outline: none;
}

.btn-mn {
  font-size: var(--font-small);
  line-height: var(--btn-sm-line-height);
  min-width: 98px;
  min-height: var(--btn-sm-height-min);
}

.btn-sm {
  font-size: var(--font-small);
  min-width: var(--btn-sm-width-min);
  min-height: var(--btn-sm-height-min);
  line-height: var(--btn-sm-line-height);
}

.btn-lg {
  font-size: var(--font-norm);
  min-width: var(--btn-lg-width-min);
  min-height: var(--btn-lg-height-min);
  line-height: var(--btn-lg-line-height);
}

.btn-flex {
  width: 100%;
}

.btn-primary[disabled],
.btn-info[disabled],
.btn-warn[disabled],
.btn-danger[disabled],
.btn-second[disabled],
.btn-success[disabled],
.btn-primary:hover[disabled],
.btn-info:hover[disabled],
.btn-warn:hover[disabled],
.btn-danger:hover[disabled],
.btn-second:hover[disabled],
.btn-success:hover[disabled] {
  background: var(--color-highlight-bubble);
  color: var(--color-disabled);
}

.btn-primary {
  background: var(--color-primary);
  color: var(--color-button-text);
}

.btn-primary:hover {
  background: var(--color-primary-hover);
  color: var(--color-button-text);
}

.btn-success {
  background: var(--color-success);
  color: var(--color-button-text);
}

.btn-success:hover {
  background: var(--color-success-hover);
  color: var(--color-button-text-hover);
}

.btn-second {
  background: var(--color-second);
  color: var(--color-button-text);
}

.btn-second:hover {
  background: var(--color-second-hover);
  color: var(--color-tone-middle);
}

.btn-info {
  background: var(--color-info);
  color: var(--color-button-text);
}

.btn-info:hover {
  background: var(--color-info-hover);
  color: var(--color-button-text-hover);
}

.btn-warn {
  background: var(--color-warning);
  color: var(--color-button-text);
}

.btn-warn:hover {
  background: var(--color-warning-hover);
  color: var(--color-button-text-hover);
}

.btn-danger {
  background: var(--color-danger);
  color: var(--color-button-text);
}

.btn-danger:hover {
  background: var(--color-danger-hover);
  color: var(--color-button-text-hover);
}






/* ------------------------------ INPUTS ----------------------------------- */

/*  this is to order the label and input
    because CSS cant let you grab elements to the left of other elements
    =( */
div.datalist,
div.select,
div.input {
  display: flex;
  flex-direction: column;
}

/* sortification */
div.datalist>label,
div.select>label,
div.input>label {
  order: 1;
}

div.datalist>input,
div.select>select,
div.input>input {
  order: 2;
}

div.datalist>div.error-ms,
div.select>div.error-ms,
div.input>div.error-ms {
  order: 3;
}

/* for required asterisk */
div.datalist>input:required+label:after,
div.select>select:required+label:after,
div.input>input:required+label:after {
  content: ' *';
}

/* default input behavior */
div.datalist input,
div.select select,
div.input input {
  min-width: 10px;
  flex-basis: auto;
  min-height: 36px;
  height: 36px;
  width: 100%;
  padding-left: 5px;
  border-radius: 2px;
  border: 1px solid var(--color-tone-bright);
  box-sizing: border-box;
}

div.select select {
  background: url(/imgs/select_arrow/default.svg);
  -webkit-appearance: none;
  background-color: var(--color-highlight-bright);
  background-position: right 8px top 5px;
  background-repeat: no-repeat;
}

div.select select:disabled,
div.select select:disabled:hover {
  background: url(/imgs/select_arrow/disabled.svg);
  -webkit-appearance: none;
  background-position: right 8px top 5px;
  background-repeat: no-repeat;
  border: 1px solid var(--color-disabled);
  background-color: var(--color-input-background);
  outline-color: var(--color-disabled);
  outline-width: 1px;
  color: var(--color-tone-light);
}

div.select select:focus,
div.select select:focus:hover {
  background: url(/imgs/select_arrow/focus.svg);
  -webkit-appearance: none;
  background-color: var(--color-highlight-bright);
  background-position: right 8px top 5px;
  background-repeat: no-repeat;
}


div.select select:invalid,
div.select select:invalid:hover {
  background: url(/imgs/select_arrow/invalid.svg);
  -webkit-appearance: none;
  background-color: var(--color-highlight-bright);
  background-position: right 8px top 5px;
  background-repeat: no-repeat;
}


div.select select:hover {
  background: url(/imgs/select_arrow/hover.svg);
  -webkit-appearance: none;
  background-color: var(--color-highlight-bright);
  background-position: right 8px top 5px;
  background-repeat: no-repeat;
}

div.datalist input:hover,
div.select select:hover,
div.input input:hover {
  border: 1px solid var(--color-highlight-hover);
}

div.datalist input:focus,
div.select select:focus,
div.input input:focus {
  outline-color: var(--color-primary);
}

div.datalist input:disabled,
div.input input:disabled {
  border: 1px solid var(--color-disabled);
  background-color: var(--color-input-background);
  outline-color: var(--color-disabled);
  outline-width: 1px;
  color: var(--color-tone-light);
}

div.datalist input.ng-invalid:not(:disabled),
div.select select:invalid,
div.input input:invalid {
  outline-color: var(--color-danger);
  outline-width: 1px;
  border: 1px solid var(--color-danger);
  color: var(--color-danger);
}

label {
  font-size: var(--font-small);
  font-weight: bold;
  text-transform: capitalize;
  line-height: var(--font-line-large);
}

div.datalist input:disabled+label,
div.select select:disabled+label,
div.input input:disabled+label {
  color: var(--color-disabled);
}

div.datalist input.ng-invalid:not(:disabled)+label,
div.select select:invalid+label,
div.input input:invalid+label {
  color: var(--color-danger);
}

div.datalist input.ng-invalid:not(:disabled)+label+div.error-ms,
div.select select:invalid+label+div.error-ms,
div.input input:invalid+label+div.error-ms {
  color: var(--color-danger);
  font-size: var(--font-small);
}

div.checkbox input:disabled+label+div.error-ms,
div.checkbox input:valid+label+div.error-ms,
div.datalist input:disabled+label+div.error-ms,
div.datalist input.ng-valid+label+div.error-ms,
div.select select:valid+label+div.error-ms,
div.select select:disabled+label+div.error-ms,
div.input input:valid+label+div.error-ms,
/* Can have input without label, still need to hide error message */
div.checkbox input:disabled+div.error-ms,
div.checkbox input:valid+div.error-ms,
div.datalist>input:disabled+div.error-ms,
div.datalist>input.ng-valid+div.error-ms,
div.select>select:valid+div.error-ms,
div.select>select:disabled+div.error-ms,
div.input>input:valid+div.error-ms {
  display: none;
}

div.checkbox {
  position: relative;
}

div.checkbox input {
  position: absolute;
  opacity: 0;
}

div.checkbox input+label {
  position: relative;
  cursor: pointer;
}

/* draw the box */
div.checkbox input+label:before {

  content: '';

  width: 22px;
  height: 22px;

  margin-right: 7px;
  display: inline-block;
  vertical-align: middle;

  background-color: var(--color-highlight-bright);
  box-sizing: border-box;

  border-style: solid;
  border-width: 1px;
  border-color: var(--color-tone-middle);
  border-radius: 2px;
}

div.checkbox:hover input+label:before {
  border-width: 2px;
  border-color: var(--color-tone-light);
}

div.checkbox input:checked+label:before {
  background-color: var(--color-accent-default);
  border-color: var(--color-accent-default);
}

/* draw the checkmark */
div.checkbox input+label:after{
  content: '';
  position: absolute;
  left: 7px;
  top: 1px;
  width: 5px;
  height: 9px;
  border-width: 0px 3px 3px 0px;
  border-style: solid;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  display: none;
}

div.checkbox input:checked+label:after {
  border-color: var(--color-highlight-bright);
  display: block;
}

div.checkbox:hover input:not(:checked)+label:after {
  border-color: var(--color-tone-light);
  display: block;
}
